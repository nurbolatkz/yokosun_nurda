import React, { useState } from 'react';
import { Button } from './ui/button';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { Input } from './ui/input';
import { Textarea } from './ui/textarea';
import { Label } from './ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { Badge } from './ui/badge';
import { X, MessageCircle, User, Phone, MapPin, Package, Hash } from 'lucide-react';
import { products, whatsappNumber } from '../mock';
import { useToast } from '../hooks/use-toast';

const OrderForm = ({ isOpen, onClose, selectedProduct, promoCode }) => {
  const { toast } = useToast();
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    city: '',
    address: '',
    product: selectedProduct?.name || '',
    quantity: 1,
    promoCode: promoCode || '',
    comments: ''
  });

  const handleInputChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const calculateTotal = () => {
    if (!formData.product) return 0;
    
    const product = products.find(p => p.name === formData.product);
    if (!product) return 0;
    
    const price = parseInt(product.price.replace(/[^\d]/g, ''));
    let total = price * formData.quantity;
    
    // Apply promo code discount
    if (formData.promoCode === 'YOKOSUN20') {
      total = total * 0.8; // 20% discount
    } else if (formData.promoCode === 'NEWBORN30') {
      total = total * 0.7; // 30% discount
    }
    
    return total;
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    
    // Validation
    if (!formData.name || !formData.phone || !formData.city || !formData.product) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è",
        variant: "destructive"
      });
      return;
    }

    // Create WhatsApp message
    const total = calculateTotal();
    const message = `
üõçÔ∏è *–ù–û–í–´–ô –ó–ê–ö–ê–ó YOKOSUN*

üë§ *–ö–ª–∏–µ–Ω—Ç:* ${formData.name}
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${formData.phone}
üèôÔ∏è *–ì–æ—Ä–æ–¥:* ${formData.city}
üìç *–ê–¥—Ä–µ—Å:* ${formData.address}

üì¶ *–¢–æ–≤–∞—Ä:* ${formData.product}
üî¢ *–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:* ${formData.quantity} —à—Ç.
${formData.promoCode ? `üéüÔ∏è *–ü—Ä–æ–º–æ–∫–æ–¥:* ${formData.promoCode}` : ''}
üí∞ *–ò—Ç–æ–≥–æ:* ${total.toLocaleString()} ‚Ç∏

${formData.comments ? `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:* ${formData.comments}` : ''}

_–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω —á–µ—Ä–µ–∑ —Å–∞–π—Ç YokoSun_
    `.trim();

    // Open WhatsApp
    const whatsappUrl = `https://wa.me/${whatsappNumber.replace(/[^\d]/g, '')}?text=${encodeURIComponent(message)}`;
    window.open(whatsappUrl, '_blank');

    toast({
      title: "–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!",
      description: "–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –∑–∞–∫–∞–∑ –∏ —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è",
    });

    onClose();
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4">
      <Card className="w-full max-w-2xl max-h-[90vh] overflow-y-auto shadow-2xl border-0">
        <CardHeader className="bg-gradient-to-r from-blue-600 to-indigo-600 text-white relative">
          <Button 
            onClick={onClose}
            variant="ghost" 
            size="sm"
            className="absolute right-4 top-4 text-white hover:bg-white/20"
          >
            <X className="w-4 h-4" />
          </Button>
          
          <CardTitle className="text-2xl font-bold pr-12">
            –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
          </CardTitle>
          <p className="text-blue-100">
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ WhatsApp
          </p>
        </CardHeader>

        <CardContent className="p-6">
          <form onSubmit={handleSubmit} className="space-y-6">
            {/* Customer Information */}
            <div className="space-y-4">
              <h3 className="text-lg font-semibold text-gray-900 flex items-center">
                <User className="w-5 h-5 mr-2 text-blue-600" />
                –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </h3>
              
              <div className="grid md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="name">–ò–º—è *</Label>
                  <Input
                    id="name"
                    value={formData.name}
                    onChange={(e) => handleInputChange('name', e.target.value)}
                    placeholder="–í–∞—à–µ –∏–º—è"
                    required
                  />
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
                  <Input
                    id="phone"
                    type="tel"
                    value={formData.phone}
                    onChange={(e) => handleInputChange('phone', e.target.value)}
                    placeholder="+7 (___) ___-__-__"
                    required
                  />
                </div>
              </div>

              <div className="grid md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="city">–ì–æ—Ä–æ–¥ *</Label>
                  <Select onValueChange={(value) => handleInputChange('city', value)}>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="almaty">–ê–ª–º–∞—Ç—ã</SelectItem>
                      <SelectItem value="nursultan">–ù—É—Ä-–°—É–ª—Ç–∞–Ω</SelectItem>
                      <SelectItem value="shymkent">–®—ã–º–∫–µ–Ω—Ç</SelectItem>
                      <SelectItem value="aktobe">–ê–∫—Ç–æ–±–µ</SelectItem>
                      <SelectItem value="taraz">–¢–∞—Ä–∞–∑</SelectItem>
                      <SelectItem value="other">–î—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="address">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</Label>
                  <Input
                    id="address"
                    value={formData.address}
                    onChange={(e) => handleInputChange('address', e.target.value)}
                    placeholder="–£–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                  />
                </div>
              </div>
            </div>

            {/* Product Information */}
            <div className="space-y-4">
              <h3 className="text-lg font-semibold text-gray-900 flex items-center">
                <Package className="w-5 h-5 mr-2 text-blue-600" />
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ
              </h3>
              
              <div className="grid md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="product">–¢–æ–≤–∞—Ä *</Label>
                  <Select 
                    value={formData.product}
                    onValueChange={(value) => handleInputChange('product', value)}
                  >
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä" />
                    </SelectTrigger>
                    <SelectContent>
                      {products.map((product) => (
                        <SelectItem key={product.id} value={product.name}>
                          {product.name} - {product.price}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="quantity">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</Label>
                  <Input
                    id="quantity"
                    type="number"
                    min="1"
                    max="10"
                    value={formData.quantity}
                    onChange={(e) => handleInputChange('quantity', parseInt(e.target.value) || 1)}
                  />
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="promoCode">–ü—Ä–æ–º–æ–∫–æ–¥</Label>
                <div className="space-y-2">
                  <Select value={formData.promoCode || "none"} onValueChange={(value) => handleInputChange('promoCode', value === 'none' ? '' : value)}>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="none">–ë–µ–∑ –ø—Ä–æ–º–æ–∫–æ–¥–∞</SelectItem>
                      <SelectItem value="YOKOSUN20">YOKOSUN20 - –°–∫–∏–¥–∫–∞ 20% –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑</SelectItem>
                      <SelectItem value="FREE_DELIVERY">FREE_DELIVERY - –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç 15,000‚Ç∏</SelectItem>
                      <SelectItem value="NEWBORN30">NEWBORN30 - –ù–∞–±–æ—Ä –¥–ª—è –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω–æ–≥–æ -30%</SelectItem>
                    </SelectContent>
                  </Select>
                  
                  {formData.promoCode && (
                    <div className="flex items-center justify-between bg-green-50 border border-green-200 rounded-lg p-3">
                      <div className="flex items-center space-x-2">
                        <Hash className="w-4 h-4 text-green-600" />
                        <span className="text-sm font-medium text-green-800">
                          –ü—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω: {formData.promoCode}
                        </span>
                      </div>
                      <Badge className="bg-green-500 text-white hover:bg-green-500">
                        {formData.promoCode === 'YOKOSUN20' ? '-20%' : 
                         formData.promoCode === 'NEWBORN30' ? '-30%' : 
                         '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞'}
                      </Badge>
                    </div>
                  )}
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="comments">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∑–∞–∫–∞–∑—É</Label>
                <Textarea
                  id="comments"
                  value={formData.comments}
                  onChange={(e) => handleInputChange('comments', e.target.value)}
                  placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã..."
                  rows={3}
                />
              </div>
            </div>

            {/* Order Summary */}
            {formData.product && (
              <div className="bg-gray-50 rounded-lg p-4 border">
                <h4 className="font-semibold text-gray-900 mb-3">–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:</h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span>{formData.product} √ó {formData.quantity}</span>
                    <span>{(calculateTotal() / (formData.promoCode ? (formData.promoCode === 'YOKOSUN20' ? 0.8 : 0.7) : 1)).toLocaleString()} ‚Ç∏</span>
                  </div>
                  {formData.promoCode && (
                    <div className="flex justify-between text-green-600">
                      <span>–°–∫–∏–¥–∫–∞ ({formData.promoCode}):</span>
                      <span>-{(calculateTotal() / (formData.promoCode === 'YOKOSUN20' ? 0.8 : 0.7) - calculateTotal()).toLocaleString()} ‚Ç∏</span>
                    </div>
                  )}
                  <div className="border-t pt-2 font-semibold text-lg flex justify-between">
                    <span>–ö –æ–ø–ª–∞—Ç–µ:</span>
                    <span className="text-blue-600">{calculateTotal().toLocaleString()} ‚Ç∏</span>
                  </div>
                </div>
              </div>
            )}

            {/* Submit Button */}
            <Button 
              type="submit"
              className="w-full bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white font-semibold py-4 rounded-lg shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"
              size="lg"
            >
              <MessageCircle className="w-5 h-5 mr-2" />
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –≤ WhatsApp
            </Button>
          </form>
        </CardContent>
      </Card>
    </div>
  );
};

export default OrderForm;