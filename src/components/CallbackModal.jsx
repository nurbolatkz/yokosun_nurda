import React, { useState } from 'react';
import { Button } from './ui/button';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { Input } from './ui/input';
import { Label } from './ui/label';
import { X, Phone } from 'lucide-react';
import { whatsappNumber } from '../mock';
import { useToast } from '../hooks/use-toast';

const CallbackModal = ({ isOpen, onClose }) => {
  const { toast } = useToast();
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    message: ''
  });

  const handleInputChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    
    if (!formData.name || !formData.phone) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω",
        variant: "destructive"
      });
      return;
    }

    // Create WhatsApp message for callback request
    const message = `
üìû *–ó–ê–ö–ê–ó–ê–¢–¨ –ó–í–û–ù–û–ö*

üë§ *–ò–º—è:* ${formData.name}
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${formData.phone}
${formData.message ? `üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* ${formData.message}` : ''}

_–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ_
    `.trim();

    // Open WhatsApp
    const whatsappUrl = `https://wa.me/${whatsappNumber.replace(/[^\d]/g, '')}?text=${encodeURIComponent(message)}`;
    window.open(whatsappUrl, '_blank');

    toast({
      title: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
      description: "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
    });

    onClose();
    setFormData({ name: '', phone: '', message: '' });
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4">
      <Card className="w-full max-w-md shadow-2xl border-0">
        <CardHeader className="bg-gradient-to-r from-purple-600 to-purple-800 text-white relative">
          <Button 
            onClick={onClose}
            variant="ghost" 
            size="sm"
            className="absolute right-4 top-4 text-white hover:bg-white/20"
          >
            <X className="w-4 h-4" />
          </Button>
          
          <CardTitle className="text-xl font-bold pr-12 flex items-center">
            <Phone className="w-5 h-5 mr-2" />
            –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫
          </CardTitle>
          <p className="text-purple-100">
            –û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∏ –º—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º
          </p>
        </CardHeader>

        <CardContent className="p-6">
          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="name">–í–∞—à–µ –∏–º—è *</Label>
              <Input
                id="name"
                value={formData.name}
                onChange={(e) => handleInputChange('name', e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                required
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
              <Input
                id="phone"
                type="tel"
                value={formData.phone}
                onChange={(e) => handleInputChange('phone', e.target.value)}
                placeholder="+7 (___) ___-__-__"
                required
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="message">–°–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</Label>
              <Input
                id="message"
                value={formData.message}
                onChange={(e) => handleInputChange('message', e.target.value)}
                placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
              />
            </div>

            <Button 
              type="submit"
              className="w-full bg-gradient-to-r from-purple-600 to-purple-800 hover:from-purple-700 hover:to-purple-900 text-white font-semibold py-3 rounded-lg shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"
            >
              <Phone className="w-4 h-4 mr-2" />
              –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫
            </Button>
          </form>
        </CardContent>
      </Card>
    </div>
  );
};

export default CallbackModal;